# /etc/nginx/conf.d/default.conf

# Define resolver for OCSP Stapling
resolver 8.8.8.8 1.1.1.1 valid=300s;
resolver_timeout 5s;

# --- Disable Server Header ---
server_tokens off;

# --- SSL Settings (Session Cache, Stapling etc) ---
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 1d;
ssl_session_tickets off;

ssl_stapling on;
ssl_stapling_verify on;


#  定义 Upstream 服务器组
upstream ai_proxy_backend {
    # Nginx 会使用 Docker 的内部 DNS 来解析服务名 'ai-proxy'
    # Docker Compose 或 Swarm 会将 'ai-proxy' 解析为所有运行中副本的 IP 地址
    # Nginx 会自动在这些 IP 地址之间进行负载均衡（默认 Round Robin）
    # 假设 ai-proxy 在容器内监听 9000 端口
    server ai-proxy:9000;

    # 可以添加其他选项，例如：
    least_conn; # 使用最少连接算法
    #ip_hash;    # 使用 IP 哈希算法
}

# --- Server block for handling HTTPS requests on port 8003 ---
server {
    listen 8003 ssl ;
    listen [::]:8003 ssl;
    http2 on;
    # IMPORTANT: Replace with your actual domain or IP
    server_name openai-api.codejoyai.com;

    # SSL Certificate Configuration
    ssl_certificate /opt/cert/codejoyai.com.pem; # Adjust filename if needed
    ssl_certificate_key /opt/cert/codejoyai.com.key; # Adjust filename if needed

    # Security Best Practices
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "interest-cohort=()" always;

    # --- Proxy Settings ---
    location / {
        proxy_pass http://ai_proxy_backend;
        # Standard Proxy Headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        # Timeouts
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
}

